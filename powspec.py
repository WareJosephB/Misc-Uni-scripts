import numpy as np
from astropy.io import fits
import matplotlib.pyplot as plt
N = 128  # Number of bins for FFTing

A = ['0111062601']  # Observations, limited to one atm, '0671180501', '0111100301', '0111310201', '0111370101', '0111390301', '0111400101', '0111470101', '0111470201', '0111490101', '0111490401', '0112200101', '0112320101', '0112320301', '0112320601', '0112440301', '0112440401', '0112900101', '0112900201', '0113050101', '0113050201', '0744210101', '0117510201', '0122340101', '0744320201', '0122340901', '0122341001', '0124930601', '0125100101', '0127720501', '0133120101', '0134120101', '0153950401', '0094520101', '0023940401', '0031740101', '0036140201', '0056030101', '0060740101', '0060740901', '0061140101', '0061140201', '0064940101', '0073140201', '0073140301', '0073140501', '0074140101', '0074140201', '0084020401', '0084020501', '0084020601', '0085180201', '0085180301', '0085290301', '0085680501', '0085680601', '0087350101', '0087350601', '0087350801', '0087350901', '0090340101', '0090340201', '0090340601', '0092820101', '0092820201', '0092820301', '0092820801', '0092821201', '0094520201', '0094520301', '0099280101', '0109090101', '0109463801', '0111030101', '0111040101', '0111060101', '0111061201', '0111061301', '0111061401', '0111061501', '0111061601', '0111061701', '0111061801', '0111062101', '0111062301', '0111100101', '0111100201', '0111230101', '0111390101', '0111410101', '0111470301', '0111500101', '0112320201', '0112440101', '0112781001', '0113020201', '0113050701', '0122330801', '0744361701', '0124930301', '0125100301', '0128120401', '0134721501', '0136541001', '0137550301', '0137551001', '0144090101', '0144900101', '0146870101', '0146870201', '0146870301', '0146870401', '0146870501', '0146870901', '0146871001', '0146871101', '0146871301', '0146871501', '0148220201', '0148220301', '0148590201', '0148590301', '0148590401', '0148590501', '0148590701', '0148590801', '0148590901', '0149550401', '0149810101', '0150390101', '0150390301', '0150495601', '0150498701', '0151410101', '0151412101', '0151412201', '0151412301', '0151412401', '0151412501', '0151412601', '0151412701', '0151412801', '0153090101', '0153750401', '0153950301', '0153951201', '0153951301', '0154750301', '0154750601', '0155150101', '0157960101', '0158971201', '0158971301', '0744361801', '0159360401', '0159361101', '0160960201', '0160960301', '0160961001', '0160961201', '0160961401', '0164560301', '0164570301', '0165360101', '0165360201', '0165360401', '0201220101', '0744840201', '0745240201', '0201590101', '0202400101', '0202400501', '0202400601', '0202400701', '0202400801', '0202760201', '0202760301', '0202760401', '0202760501', '0203500201', '0204690101', '0204730201', '0204910201', '0205920401', '0205920501', '0205920601', '0206320101', '0206670101', '0206670201', '0210681401', '0210682801', '0212480501', '0302180101', '0303220201', '0304080301', '0304080401', '0745250501', '0745250701', '0304080501', '0304080601', '0304720101', '0305240201', '0305240401', '0305240501', '0307400101', '0307420401', '0307420501', '0307420601', '0311590901', '0312590101', '0400550201', '0401390101', '0401630201', '0402300201', '0402330301', '0402330401', '0402330501', '0402330601', '0403530201', '0403530301', '0403530401', '0403530501', '0403530601', '0405510201', '0405510301', '0405510401', '0405510501', '0405510701', '0405520301', '0406430201', '0406620201', '0406620301', '0406620401', '0406700201', '0410180101', '0410180201', '0410180301', '0748390101', '0410580401', '0410580501', '0411080701', '0412590201', '0412590601', '0412591101', '0412591501', '0412592001', '0412592501', '0412593101', '0412981501', '0412981601', '0413180201', '0413180301', '0748390501', '0500350301', '0500350401', '0501750801', '0502030101', '0502211101', '0502290101', '0503190301', '0503190401', '0504370401', '0504370701', '0505480101', '0505480201', '0505480301', '0505480401', '0505480501', '0505950101', '0506110101', '0506291201', '0510010101', '0510610101', '0510610201', '0551270201', '0552270501', '0552270601', '0554110201', '0555200301', '0555200401', '0555410101', '0560180201', '0560180601', '0560180801', '0603460101', '0604030101', '0605160101', '0605370101', '0605610201', '0605610301', '0605610401', '0606070101', '0606070201', '0606070301', '0606070401', '0606200101', '0610000701', '0610000901', '0748390601', '0748390701', '0748391201', '0611180201', '0611180501', '0611180801', '0611181001', '0611181101', '0611181401', '0611181601', '0611181801', '0611182001', '0611182201', '0611182401', '0611182601', '0611182801', '0611183001', '0611183201', '0611183401', '0651450101', '0652730101', '0652770101', '0653110101', '0653910301', '0654130401', '0655020101', '0655330201', '0655670101', '0656580301', '0656780601', '0656780901', '0658800801', '0670671301', '0670672901', '0670673001', '0670920301', '0670920401', '0670920501', '0671180201', '0671180301', '0671180401', '0671180601', '0671420201', '0671420301', '0671420401', '0671420501', '0671420601', '0671880101', '0673510501', '0673510601', '0673510801', '0673510901', '0673930101', '0674580101', '0675130201', '0679380301', '0679980501', '0679980601', '0679980701', '0679980801', '0691271401', '0691740201', '0693490201', '0694040201', '0694870201', '0694930501', '0700381301', '0701190101', '0701200101', '0701200201', '0701981401', '0701981501', '0720030101', '0720940101', '0721130101', '0748391301', '0748391601', '0760646201', '0760646301', '0760646401', '0722550301', '0722550401', '0723570201', '0724080101', '0724400501', '0724401901', '0724490201', '0727960901', '0727961201', '0727961501', '0728200201', '0729560201', '0729560301', '0729560401', '0729560801', '0740980201', '0741620101', '0741620201', '0742610101', '0742930101', '0742980101', '0743060101', '0743960201', '0744170201', '0760646501', '0762210201', '0763470301', '0763470401', '0764180201', '0764180301', '0764180401', '0764860101', '0770580201', '0770580301', '0770580601', '0770580701', '0770581001', '0770581101', '0783330301', '0783540201', '0783540301', '0783770501', '0783770601', '0783770701', '0784570201', '0784570301', '0784570401', '0784570501', '0784700201', '0790181401', '0790181501', '0790620101', '0790780101', '0793182901', '0793980201', '0793980401', '0794580301', '0794580801', '0794580901']

K = '/export/data/josephw/Data/'  # observation storage

plt.ioff()

Times = []  # Stores N lengthed bins of Times
Rates = []  # as above for Rates
for I in A:
    image_file = (K+I+'/LC_smallbins.fits') # Flare filtered light curves with bin size dT
    with fits.open(image_file) as fits:  # Open .fits
        X = fits[1].data['TIME']
        dT = X[1] - X[0]  # Find d for fftfreq
        Y = fits[1].data['RATE']
        Time = []  # refresh Time, Rate, i, j
        Rate = []
        i = 0
        j = 0
        while i < len(Y):  # for all Times
            while j < N:  # if fits into bin
                if int(Y[i]) != 0:  # drop 0s
                    Time.append(X[i])
                    Rate.append(Y[i])
                    i += 1
                    j += 1
                else:
                    i += 1
                    j = 0  # Make new bin if gap in bin, discard old
                    Time = []
                    Rate = []
                    if i == len(Y):  # Exit condition
                        j = N
                '''Time.append(X[i])  # Version which doesn't drop 0s
                Rate.append(Y[i])
                j += 1
                i += 1
                if i == len(Y):
                    j = N'''
            Times.append(Time)  # if j==N, bins are filled, add to data
            Time = []
            Rates.append(Rate)
            Rate = []
            j = 0
    P = []
    for a in Times:
        if len(a) == N:
            GH = np.fft.rfft(a)  # FFT filled bins
            P.append(GH)
    Q = []
    i = 0
    while i < N:
        L = []
        JG = P[i]
        for b in JG:
            L.append(b)
        Q.append(sum(L)/len(L))  # Average all FFTs
        i += 1
    freqs = np.fft.rfftfreq(N, dT)
    plot = plt.figure()
    plt.xlabel('Frequency')
    plt.ylabel('FFT Power')
    plt.title('Powerspectrum of '+I)
    plt.plot(freqs, Q, lw=0.1)
    plt.savefig('/export/data/josephw/Picture/'+I+'_iFFT.png', format='png')
    plt.close(plot)
